# dissertation
一．实习目的
    通过理论联系实际，巩固所学的知识，提高处理实际问题的能力，为顺利毕业进行做好充分的准备，并为能顺利与社会环境接轨做准备。通过毕业实习，进一步理解和领会所学的基本理论，了解计算机技术发展及应用，较为系统地掌握计算机应用技能，把所学知识与解决实际问题相联系，能够利用计算机处理工作中的各种信息，培养发现问题、分析问题和解决问题的能力，从而提高从事实际工作的能力。 
    实习对于锻炼专业能力，看清自己的定位是很有帮助的。而从就业角度来看，拥有丰富实习经历的学生在就业时的优势也是比较明显的。  
毕业实习是一个极为重要的实践性教学环节。通过毕业实习，接触与本专业相关的实际工作，增强感性认识，培养和锻炼综合运用所学的基础理论、基本技能和专业知识，去独立分析和解决实际问题的能力，把理论和实践结合起来，提高实践动手能力，为毕业后走上工作岗位打下一定的基础。计算机是一门对实践要求较高的学科，通过专业实习能熟悉有关计算机专业的各个领域，毕业后能胜任与本专业相关的工作。  
    大学四年学习了很多，经历了很多，得到的是学习能力、处事能力和一些专业知识。毕业实习，给了我门了解社会，增加工作经验，熟悉未来工作岗位的机会。不仅可以锻 炼自己的动手实践能力，将自己掌握的经验和知识运用于实践和工作当中，反过来还能检验自己的能力究竟处于什么水平，有利于发现自身问题，及时解决。同时，也能开拓视野，完善知识结构，达到提升自己技能的水平，增加自己的专业能力经验。此外通过理论联系实际，巩固所学的知识，正视自身存在的问题，提高处理实际问题的能力，也为了毕业设计的顺利进行做好充分的准备，并为自己从学校到社会这一过渡时期与社会环境接轨做准备。

二．实习时间
    2018.3.5-2018.3.16

三．实习地点
    蓝鸥科技（大连）有限公司

四．实习工作内容
    我实习的工作职位是web前端工程师，前端工程师是互联网时代软件产品研发中不可缺少的一种专业研发角色。从狭义上讲，前端工程师使用 HTML、CSS、JavaScript 等专业技能和工具将产品UI设计稿实现成网站产品，涵盖用户PC端、移动端网页，处理视觉和交互问题。从广义上来讲，所有用户终端产品与视觉和交互有关的部分，都是前端工程师的专业领域。身为一位web前端工程师需要达到以下几点要求：
1.与设计师、产品工程师紧密工作在一起,实现产品前端UI和交互方面的开发需求，确保不同平台、设备上具有优秀的用户体验；
2.配合后端工程师增加页面的JS交互效果以及CSS排版；
3.根据不同的PC和手机浏览器编写高效的脚本代码；
4.持续的优化前端体验和页面相应速度，并保证兼容性和执行效率；
5.与团队成员分享经验和新技术，帮助团队成长。



五．实习总结

    让我大开眼界。也是对以前所学知识的一个初审吧! 这次实训对于我以后学习、找工作也真是受益菲浅，在短短的几天中相信这些宝贵 的经验会成为我今后成功的重要的基石。
    作为一名大四马上就要毕业的学生，经过大学整整四年的在校学习，对程序设计有了理性的认识和理解。在校期间，一直忙于理论知识的学习，只能偶尔练习一些小程序，没有机会也没有相应的经验来参与项目的开发。很清楚团队协作的重要性，毕竟一个人的能力有限，团队合作更能创造更丰富的内容，但尚未有很好的机会在相对成熟专业的团队中锻炼实践。在实训之前，软件项目开发对我来说是比较抽象的，，我对团队协作的了解和认知都还有所欠缺，一个完整的项目要怎么来分工以及完成该项目所要的基本步骤。而经过这次实训，让我明白一个完整项目的开发，从简单到复杂，都必须由团队来分工合作，并在每个阶段中进行必要的总结与论证。web前端开发完整一个项目的开发它所要经历的阶段包括：
    第一阶段：库/框架选型
    第二阶段：简单构建优化
    第三阶段：JS/CSS模块化开发
    第四阶段：组件化开发与资源管理
    认为理想的软件开发团队由四个专业技能过硬的成员组成：一个美工，熟悉UI的设计并具备将效果图转换成前端页面的能力，也就是得同时精通PhotoShop、HTML、CSS、jQuery等前端知识；一个程序员，熟练掌握代码的编写重构；一个项目经理，具备需求分析的能力、数据库设计维护的能力、架构设计的能力、程序编写的能力、前端样式脚本编写的能力，最重要的是对业务流程有精准的把握；一个部门经理，和前三位不一样，部门经理只具备领导能力即可，他是兼职，不需要把全部时间投入到团队中。
　　大部分中小型项目可以由这样的四人团队完成，可如果项目较大，已经大大超出了四个人可完成的工作量，可以再加一个前端开发人员。也就是说两个前端开发者，一个负责UI设计，做出完整的效果图，这个人的设计功底应该比较强；一个负责将效果图转换成页面，并完成样式、脚本等的编写，这个人对前端样式脚本的掌握应该比较熟练。同时程序员的数量也可以增加，可以根据业务将软件划分成不同的功能模块，按照功能模块进行工作量上的划分，交给不同的程序员完成。也可以根据程序架构进行工作量上的划分，实体由谁来负责、接口由谁来负责、应用层由谁来负责、业务逻辑层由谁来负责、数据访问层由谁来负责，等。无论项目如何庞大，这个项目的整体设计师只能有一位，那就是项目经理，负责UI的设计者，最好也只有一位，这样可以确保整个项目设计的完整性、协调性.
  也没有更大规模项目的开发经验，如果成员质量可靠的话，四个人的开发团队足以应付大部分Web业务系统的开发。一直主张，在可能的情况下，团队中的成员质量应该越高越好，而团队中的成员数量则应该越少越好。因为四人以上的团队，沟通成本会随着人员数量的增长指数增长，工作效率也会随着人员数量的增长指数下降。
　　团队成员中沟通的问题稍后介绍，先来讲下团队各成员的工作重心。项目经理负责数据库的详细设计、程序架构和前端的宏观设计，把控全局且必须参与到具体的开发工作中。项目经理是整个团队成员中工作量最大的一位，必须是全职，在一个项目完工之前，他不应该去做与这个项目无关的任何其它工作。部门经理主要负责跟踪项目开发进程，督促项目经理和团队的工作，并满足项目经理调用公司各种资源的需求。部门经理可以定期组织会议听取项目经理和团队针对项目的工作汇报，也可以提出自己的部分意见，但对于项目的开发实现没有任何的决定权。部门经理的责任最大，但日常工作量并不多，因为他无需涉及具体的项目开发工作。
　　对项目的最终展现有决定权的只能有两个人，一个是客户，一个是项目经理。客户是第一位的，提出需求；项目经理是第二位的，决定此需求的实现方式。除此之外，不应该有其它任何人干涉项目的具体工作。尤其是管理者，比如这里的部门经理。部门经理必须要跟踪并督促项目的进展，但万万不要干涉具体的项目开发设计。
　　负责整体设计的人一定要参与到开发工作中，谁设计的谁就要参与到具体开发中，不懂开发不想开发开发不了就不要参与设计。有些懂技术的管理者喜欢自己设计项目，然后交由下面的人去实现自己的设计，这种看似没有问题的分工方式实际上是最致命的。管理者喜欢这样做，是想让这个项目按自己的理念完成，让这个项目处于自己的掌控之中，但同时，具体的开发工作又是非常繁琐耗费精力的，这部分工作全交给下面的员工去做，自己坐享其成。这样分工的问题在哪里呢？坦白的讲，很多管理者对技术的掌握、对业务的了解远不如基层员工，由他来负责设计，设计本身可能就是有问题的。更坏的情况是，不负责整个项目的整体设计，整体设计由项目经理来做，但关键性的业务，非要自己来设计。项目经理、程序员在去实现这样的设计时，会遇到很多问题，有的是在开发过程中就做不下去了，有的勉强开发出来，却给后期的扩展维护更改埋下了巨大隐患，一个失败的项目也就这么出来了。
  
    人与人间的沟通效率直接决定着整个团队的工作效率。在上面提到的对软件开发团队的成员划分中，项目经理对数据库、程序、架构的设计要和程序员对接，项目经理对界面、前端的设计要和美工、前端开发者对接，项目经理对全局的设计、比如前端脚本和后端程序的互调要和所有人对接。UI设计者要和将UI转换成具体页面并编写相应脚本的前端人员对接。前端人员要和程序员进行对接。项目经理是所有沟通渠道的枢纽，责任重大。
　　人不是机器，都会有情绪，有好恶，这种好恶情绪会导致团队各成员之间互相合得来或合不来，这是致命的。在团队，应该杜绝个人情绪，抛开喜怒哀乐只就事论事就工作论工作。为了保证沟通渠道的畅通，定期的会议是必须的，项目开发过程中，也可根据实际情况增加临时会议。团队初建之时，为了增进相互了解，定期的会议应该是相对频繁的。团队成型之后，定期的会议可以适当（是适当）减少，而着重于增加沟通效率。既然都相互熟悉了，那就把沟通成本降到最低。除了会议，也可以尝试进行其它的团体活动，比如适时的户外活动、定时聚餐等等，以增进相互了解。团队的形成，终需要时间的磨合，而如何把这个磨合时间降到最底，团队带头人的责任最大。在团队中，个人能量的大小不是最重要的，重要的是整个团队能量的大小。成然，团队中每个成员的质量在一定程度上决定着整个团队的质量，可如果每个成员仅仅在技术上优秀，互相之间却不沟通协调、甚至在工作上为一己之私勾心斗角，那这个团队永远不会是一个成功的团队。团队中的每个成员都应该拥有大局观念、团结意识，这才是第一位的。
　　锻炼团队最有效的方式和锻炼个人的一样，还是实战，如果不考虑人员变动，三个项目过去，团队自然可以成型。
　　认为理想的WEB应用程序开发框架是自己先前设想的那种，前端、程序、数据库之间互相分离，以上关于团队成员的划分安排即是在这种开发框架下设定。如果不是这种开发模式，比如用了服务器控件、比如用的是其它编程语言、比如不支持多数据库，甚至是非WEB应用项目的开发，团队成员划分方案大致类似。
    外观界面是项目给人的第一印象，站在客户的角度来讲很重要。就像一座房子，你用的钢筋混泥土的质量再好，入住的人是看不到的，可如果装修的很奢华，那给人的第一印象就是这房子很高大上。程序员一般容易轻视界面的重要性，觉得这不过是一幅皮囊，只要架构足够稳定，界面再怎么绚丽，也不过是是增删改查几种动作的操作方式不同而以。这样想也无可厚非，说明项目开发团队中每个人的关注点不同，但项目经理应该有全局关念，要清楚的知道每个部分的轻重。在不同的需求、不同的客户、不同的领导、不同的时间、不同的外部状况下，各部分的轻重缓急并非是一成不变的。
